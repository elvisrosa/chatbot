{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class ChatService {\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n  }\n  getMessages(receiverId) {\n    const token = this.auth.getToken();\n    return this.http.get(`http://localhost:8080/api/er/me/to`, {\n      params: {\n        'receiverId': receiverId || ''\n      },\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ChatService_Factory(t) {\n      return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ChatService,\n      factory: ChatService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ChatService","constructor","http","auth","getMessages","receiverId","token","getToken","get","params","headers","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Elvis Rosa\\Desktop\\Proyectos Spring\\chatbot\\chat\\src\\app\\services\\chat.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(private http: HttpClient, private auth: AuthService) { }\n\n  public getMessages(receiverId: string): Observable<any> {\n    const token = this.auth.getToken();\n    return this.http.get(`http://localhost:8080/api/er/me/to`, { params: { 'receiverId': receiverId || '' }, headers: { 'Authorization': `Bearer ${token}` } });\n  }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB,EAAUC,IAAiB;IAA3C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,IAAI,GAAJA,IAAI;EAAiB;EAE5DC,WAAWA,CAACC,UAAkB;IACnC,MAAMC,KAAK,GAAG,IAAI,CAACH,IAAI,CAACI,QAAQ,EAAE;IAClC,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,oCAAoC,EAAE;MAAEC,MAAM,EAAE;QAAE,YAAY,EAAEJ,UAAU,IAAI;MAAE,CAAE;MAAEK,OAAO,EAAE;QAAE,eAAe,EAAE,UAAUJ,KAAK;MAAE;IAAE,CAAE,CAAC;EAC7J;;;uBAPWN,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAXhB,WAAW;MAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}