{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UtilsService {\n  constructor() {}\n  formatLastSeen(lastSeen) {\n    const date = new Date(lastSeen);\n    if (isNaN(date.getTime())) return 'Última vez desconocida';\n    const now = new Date();\n    const isToday = date.toDateString() === now.toDateString();\n    const yesterday = new Date();\n    yesterday.setDate(now.getDate() - 1);\n    const isYesterday = date.toDateString() === yesterday.toDateString();\n    const time = date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n    if (isToday) return `Última vez hoy a las ${time}`;\n    if (isYesterday) return `Última vez ayer a las ${time}`;\n    const options = {\n      weekday: 'long'\n    };\n    const day = date.toLocaleDateString('es-ES', options);\n    return `Última vez el ${day} a las ${time}`;\n  }\n  getStatusIcon(status) {\n    switch (status) {\n      case \"send\":\n        return \"check\";\n      case \"delivered\":\n        return \"done_all\";\n      case \"read\":\n        return \"done_all\";\n      default:\n        return \"schedule\";\n    }\n  }\n  static {\n    this.ɵfac = function UtilsService_Factory(t) {\n      return new (t || UtilsService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UtilsService,\n      factory: UtilsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["UtilsService","constructor","formatLastSeen","lastSeen","date","Date","isNaN","getTime","now","isToday","toDateString","yesterday","setDate","getDate","isYesterday","time","toLocaleTimeString","hour","minute","options","weekday","day","toLocaleDateString","getStatusIcon","status","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Elvis Rosa\\Desktop\\Proyectos Spring\\chatbot\\chat\\src\\app\\services\\utils.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  constructor() { }\n\n  formatLastSeen(lastSeen: string): string {\n    const date = new Date(lastSeen);\n    if (isNaN(date.getTime())) return 'Última vez desconocida';\n\n    const now = new Date();\n    const isToday = date.toDateString() === now.toDateString();\n    const yesterday = new Date();\n    yesterday.setDate(now.getDate() - 1);\n    const isYesterday = date.toDateString() === yesterday.toDateString();\n\n    const time = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n    if (isToday) return `Última vez hoy a las ${time}`;\n    if (isYesterday) return `Última vez ayer a las ${time}`;\n\n    const options: Intl.DateTimeFormatOptions = { weekday: 'long' };\n    const day = date.toLocaleDateString('es-ES', options);\n    return `Última vez el ${day} a las ${time}`;\n  }\n\n  getStatusIcon(status: string): string {\n    switch (status) {\n      case \"send\":\n        return \"check\"\n      case \"delivered\":\n        return \"done_all\"\n      case \"read\":\n        return \"done_all\"\n      default:\n        return \"schedule\"\n    }\n  }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,YAAY;EAEvBC,YAAA,GAAgB;EAEhBC,cAAcA,CAACC,QAAgB;IAC7B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,QAAQ,CAAC;IAC/B,IAAIG,KAAK,CAACF,IAAI,CAACG,OAAO,EAAE,CAAC,EAAE,OAAO,wBAAwB;IAE1D,MAAMC,GAAG,GAAG,IAAIH,IAAI,EAAE;IACtB,MAAMI,OAAO,GAAGL,IAAI,CAACM,YAAY,EAAE,KAAKF,GAAG,CAACE,YAAY,EAAE;IAC1D,MAAMC,SAAS,GAAG,IAAIN,IAAI,EAAE;IAC5BM,SAAS,CAACC,OAAO,CAACJ,GAAG,CAACK,OAAO,EAAE,GAAG,CAAC,CAAC;IACpC,MAAMC,WAAW,GAAGV,IAAI,CAACM,YAAY,EAAE,KAAKC,SAAS,CAACD,YAAY,EAAE;IAEpE,MAAMK,IAAI,GAAGX,IAAI,CAACY,kBAAkB,CAAC,EAAE,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAS,CAAE,CAAC;IAEhF,IAAIT,OAAO,EAAE,OAAO,wBAAwBM,IAAI,EAAE;IAClD,IAAID,WAAW,EAAE,OAAO,yBAAyBC,IAAI,EAAE;IAEvD,MAAMI,OAAO,GAA+B;MAAEC,OAAO,EAAE;IAAM,CAAE;IAC/D,MAAMC,GAAG,GAAGjB,IAAI,CAACkB,kBAAkB,CAAC,OAAO,EAAEH,OAAO,CAAC;IACrD,OAAO,iBAAiBE,GAAG,UAAUN,IAAI,EAAE;EAC7C;EAEAQ,aAAaA,CAACC,MAAc;IAC1B,QAAQA,MAAM;MACZ,KAAK,MAAM;QACT,OAAO,OAAO;MAChB,KAAK,WAAW;QACd,OAAO,UAAU;MACnB,KAAK,MAAM;QACT,OAAO,UAAU;MACnB;QACE,OAAO,UAAU;;EAEvB;;;uBAnCWxB,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAyB,OAAA,EAAZzB,YAAY,CAAA0B,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}