{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this._authenticated = new BehaviorSubject(false);\n    this._user = new BehaviorSubject(null);\n    this.authenticated$ = this._authenticated.asObservable();\n    this.user$ = this._user.asObservable();\n    if (this.getToken()) {\n      this._authenticated.next(true);\n    }\n  }\n  getToken() {\n    return localStorage.getItem('tksrtath') || '';\n  }\n  setToken(token) {\n    localStorage.setItem('tksrtath', token);\n  }\n  deleteToken() {\n    localStorage.removeItem('tksrtath');\n  }\n  get isAuthenticated() {\n    return this._authenticated.value;\n  }\n  login(user) {\n    return this.http.post('http://localhost:8080/api/auth/anon', user);\n  }\n  register(user) {\n    return this.http.post('http://localhost:8080/api/auth/register', user);\n  }\n  logout() {\n    this.deleteToken();\n    return this.http.post('http://localhost:8080/api/auth/logout', {});\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport class Response {\n  constructor() {\n    this.statusCode = 0;\n    this.message = '';\n  }\n}","map":{"version":3,"names":["BehaviorSubject","AuthService","constructor","http","_authenticated","_user","authenticated$","asObservable","user$","getToken","next","localStorage","getItem","setToken","token","setItem","deleteToken","removeItem","isAuthenticated","value","login","user","post","register","logout","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","Response","statusCode","message"],"sources":["C:\\Users\\Elvis Rosa\\Desktop\\Proyectos Spring\\chat\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _authenticated = new BehaviorSubject<boolean>(false);\n  private _user = new BehaviorSubject<any>(null);\n\n  public readonly authenticated$ = this._authenticated.asObservable();\n  public readonly user$ = this._user.asObservable();\n\n  constructor(private http: HttpClient) {\n    if (this.getToken()) {\n      this._authenticated.next(true);\n    }\n  }\n\n  getToken(): string {\n    return localStorage.getItem('tksrtath') || '';\n  }\n\n  setToken(token: string) {\n    localStorage.setItem('tksrtath', token);\n  }\n\n  deleteToken() {\n    localStorage.removeItem('tksrtath');\n  }\n\n  get isAuthenticated(): boolean {\n    return this._authenticated.value;\n  }\n\n  login(user: any) {\n    return this.http.post<Response>('http://localhost:8080/api/auth/anon', user);\n  }\n\n  register(user: any) {\n    return this.http.post('http://localhost:8080/api/auth/register', user);\n  }\n\n  logout() {\n    this.deleteToken();\n    return this.http.post('http://localhost:8080/api/auth/logout', {});\n  }\n\n}\n\n\nexport class Response {\n  statusCode: number = 0;\n  message: string = '';\n  data: any;\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,WAAW;EAQtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANhB,KAAAC,cAAc,GAAG,IAAIJ,eAAe,CAAU,KAAK,CAAC;IACpD,KAAAK,KAAK,GAAG,IAAIL,eAAe,CAAM,IAAI,CAAC;IAE9B,KAAAM,cAAc,GAAG,IAAI,CAACF,cAAc,CAACG,YAAY,EAAE;IACnD,KAAAC,KAAK,GAAG,IAAI,CAACH,KAAK,CAACE,YAAY,EAAE;IAG/C,IAAI,IAAI,CAACE,QAAQ,EAAE,EAAE;MACnB,IAAI,CAACL,cAAc,CAACM,IAAI,CAAC,IAAI,CAAC;;EAElC;EAEAD,QAAQA,CAAA;IACN,OAAOE,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;EAC/C;EAEAC,QAAQA,CAACC,KAAa;IACpBH,YAAY,CAACI,OAAO,CAAC,UAAU,EAAED,KAAK,CAAC;EACzC;EAEAE,WAAWA,CAAA;IACTL,YAAY,CAACM,UAAU,CAAC,UAAU,CAAC;EACrC;EAEA,IAAIC,eAAeA,CAAA;IACjB,OAAO,IAAI,CAACd,cAAc,CAACe,KAAK;EAClC;EAEAC,KAAKA,CAACC,IAAS;IACb,OAAO,IAAI,CAAClB,IAAI,CAACmB,IAAI,CAAW,qCAAqC,EAAED,IAAI,CAAC;EAC9E;EAEAE,QAAQA,CAACF,IAAS;IAChB,OAAO,IAAI,CAAClB,IAAI,CAACmB,IAAI,CAAC,yCAAyC,EAAED,IAAI,CAAC;EACxE;EAEAG,MAAMA,CAAA;IACJ,IAAI,CAACR,WAAW,EAAE;IAClB,OAAO,IAAI,CAACb,IAAI,CAACmB,IAAI,CAAC,uCAAuC,EAAE,EAAE,CAAC;EACpE;;;uBAzCWrB,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX3B,WAAW;MAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA;;AAgDpB,OAAM,MAAOC,QAAQ;EAArB9B,YAAA;IACE,KAAA+B,UAAU,GAAW,CAAC;IACtB,KAAAC,OAAO,GAAW,EAAE;EAEtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}