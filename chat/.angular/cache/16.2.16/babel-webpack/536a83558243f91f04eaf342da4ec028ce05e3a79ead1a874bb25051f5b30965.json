{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {}\n  toggleDarkMode() {\n    const body = document.body;\n    body.classList.toggle('dark-mode');\n    const isDarkMode = body.classList.contains('dark-mode');\n    localStorage.setItem('isDarkMode', JSON.stringify(isDarkMode));\n  }\n  get isDarkMode() {\n    const isDarkMode = localStorage.getItem('dm');\n    return isDarkMode ? JSON.parse(isDarkMode) : false;\n  }\n  set isDarkMode(value) {\n    const body = document.body;\n    if (value) {\n      body.classList.add('dark-mode');\n    } else {\n      body.classList.remove('dark-mode');\n    }\n    localStorage.setItem('isDarkMode', JSON.stringify(value));\n  }\n  static {\n    this.ɵfac = function ThemeService_Factory(t) {\n      return new (t || ThemeService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ThemeService,\n      factory: ThemeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ThemeService","constructor","toggleDarkMode","body","document","classList","toggle","isDarkMode","contains","localStorage","setItem","JSON","stringify","getItem","parse","value","add","remove","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Elvis Rosa\\Desktop\\Proyectos Spring\\chat\\src\\app\\services\\theme.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  constructor() { }\n\n  toggleDarkMode() {\n    const body = document.body;\n    body.classList.toggle('dark-mode');\n    const isDarkMode = body.classList.contains('dark-mode');\n    localStorage.setItem('isDarkMode', JSON.stringify(isDarkMode));\n  }\n\n  get isDarkMode(): boolean {\n    const isDarkMode = localStorage.getItem('dm');\n    return isDarkMode ? JSON.parse(isDarkMode) : false;\n  }\n\n  set isDarkMode(value: boolean) {\n    const body = document.body;\n    if (value) {\n      body.classList.add('dark-mode');\n    } else {\n      body.classList.remove('dark-mode');\n    }\n    localStorage.setItem('isDarkMode', JSON.stringify(value));\n  }\n\n\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,YAAY;EAEvBC,YAAA,GAAgB;EAEhBC,cAAcA,CAAA;IACZ,MAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAI;IAC1BA,IAAI,CAACE,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;IAClC,MAAMC,UAAU,GAAGJ,IAAI,CAACE,SAAS,CAACG,QAAQ,CAAC,WAAW,CAAC;IACvDC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAC,CAAC;EAChE;EAEA,IAAIA,UAAUA,CAAA;IACZ,MAAMA,UAAU,GAAGE,YAAY,CAACI,OAAO,CAAC,IAAI,CAAC;IAC7C,OAAON,UAAU,GAAGI,IAAI,CAACG,KAAK,CAACP,UAAU,CAAC,GAAG,KAAK;EACpD;EAEA,IAAIA,UAAUA,CAACQ,KAAc;IAC3B,MAAMZ,IAAI,GAAGC,QAAQ,CAACD,IAAI;IAC1B,IAAIY,KAAK,EAAE;MACTZ,IAAI,CAACE,SAAS,CAACW,GAAG,CAAC,WAAW,CAAC;KAChC,MAAM;MACLb,IAAI,CAACE,SAAS,CAACY,MAAM,CAAC,WAAW,CAAC;;IAEpCR,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACG,KAAK,CAAC,CAAC;EAC3D;;;uBAxBWf,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}