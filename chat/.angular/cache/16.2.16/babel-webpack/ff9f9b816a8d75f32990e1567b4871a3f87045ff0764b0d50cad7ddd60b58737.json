{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nexport let SidebarComponent = class SidebarComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.contacts = [];\n    this.activeContactId = 0;\n    this.autenticated = false;\n    this.contactSelected = new EventEmitter();\n    this.contacts2 = [];\n    this.searchTerm = \"\";\n  }\n  ngAfterViewInit() {\n    this.getContact();\n  }\n  ngOnInit() {\n    // this.getContact();\n  }\n  getContact() {\n    this.userService.getContacts().subscribe({\n      next: response => {\n        this.contacts2 = response;\n      },\n      error: error => {},\n      complete: () => {}\n    });\n  }\n  get filteredContacts() {\n    if (this.searchTerm) {\n      const term = this.searchTerm.toLowerCase();\n      return this.contacts2.filter(contact => contact.name.toLowerCase().includes(term) || contact.username.toLowerCase().includes(term));\n    }\n    return this.contacts2;\n  }\n  selectContact(id) {\n    this.contactSelected.emit(id);\n  }\n  getStatusIcon(status) {\n    switch (status) {\n      case \"sent\":\n        return \"check\";\n      case \"delivered\":\n        return \"done_all\";\n      case \"read\":\n        return \"done_all\";\n      default:\n        return \"schedule\";\n    }\n  }\n};\n__decorate([Input()], SidebarComponent.prototype, \"contacts\", void 0);\n__decorate([Input()], SidebarComponent.prototype, \"activeContactId\", void 0);\n__decorate([Input()], SidebarComponent.prototype, \"autenticated\", void 0);\n__decorate([Output()], SidebarComponent.prototype, \"contactSelected\", void 0);\nSidebarComponent = __decorate([Component({\n  selector: \"app-sidebar\",\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})], SidebarComponent);","map":{"version":3,"names":["Component","EventEmitter","Input","Output","SidebarComponent","constructor","userService","contacts","activeContactId","autenticated","contactSelected","contacts2","searchTerm","ngAfterViewInit","getContact","ngOnInit","getContacts","subscribe","next","response","error","complete","filteredContacts","term","toLowerCase","filter","contact","name","includes","username","selectContact","id","emit","getStatusIcon","status","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Elvis Rosa\\Desktop\\Proyectos Spring\\chatbot\\chat\\src\\app\\components\\sidebar\\sidebar.component.ts"],"sourcesContent":["import { HttpResponse } from '@angular/common/http';\nimport { AfterViewInit, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: \"app-sidebar\",\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\n\nexport class SidebarComponent implements OnInit, AfterViewInit {\n\n  @Input() contacts: any[] = []\n  @Input() activeContactId = 0\n  @Input() autenticated: boolean = false\n  @Output() contactSelected = new EventEmitter<number>()\n\n  contacts2: any[] = [];\n\n  searchTerm = \"\"\n\n  constructor(private userService: UserService) { }\n  \n  ngAfterViewInit(): void {\n    this.getContact();\n  }\n\n  ngOnInit(): void {\n    // this.getContact();\n  }\n\n  getContact() {\n    this.userService.getContacts().subscribe({\n      next: (response) => {\n       this.contacts2 = response;\n      },\n      error: (error: any) => { },\n      complete: () => { }\n    })\n  }\n\n  get filteredContacts() {\n    if (this.searchTerm) {\n      const term = this.searchTerm.toLowerCase()\n      return this.contacts2.filter(\n        (contact) => contact.name.toLowerCase().includes(term) || contact.username.toLowerCase().includes(term),\n      )\n    }\n    return this.contacts2;\n  }\n\n  selectContact(id: number) {\n    this.contactSelected.emit(id)\n  }\n\n  getStatusIcon(status: string): string {\n    switch (status) {\n      case \"sent\":\n        return \"check\"\n      case \"delivered\":\n        return \"done_all\"\n      case \"read\":\n        return \"done_all\"\n      default:\n        return \"schedule\"\n    }\n  }\n\n}\n"],"mappings":";AACA,SAAwBA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAUC,MAAM,QAAQ,eAAe;AAStF,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAW3BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IATtB,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,eAAe,GAAG,CAAC;IACnB,KAAAC,YAAY,GAAY,KAAK;IAC5B,KAAAC,eAAe,GAAG,IAAIT,YAAY,EAAU;IAEtD,KAAAU,SAAS,GAAU,EAAE;IAErB,KAAAC,UAAU,GAAG,EAAE;EAEiC;EAEhDC,eAAeA,CAAA;IACb,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAC,QAAQA,CAAA;IACN;EAAA;EAGFD,UAAUA,CAAA;IACR,IAAI,CAACR,WAAW,CAACU,WAAW,EAAE,CAACC,SAAS,CAAC;MACvCC,IAAI,EAAGC,QAAQ,IAAI;QAClB,IAAI,CAACR,SAAS,GAAGQ,QAAQ;MAC1B,CAAC;MACDC,KAAK,EAAGA,KAAU,IAAI,CAAG,CAAC;MAC1BC,QAAQ,EAAEA,CAAA,KAAK,CAAG;KACnB,CAAC;EACJ;EAEA,IAAIC,gBAAgBA,CAAA;IAClB,IAAI,IAAI,CAACV,UAAU,EAAE;MACnB,MAAMW,IAAI,GAAG,IAAI,CAACX,UAAU,CAACY,WAAW,EAAE;MAC1C,OAAO,IAAI,CAACb,SAAS,CAACc,MAAM,CACzBC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAACH,WAAW,EAAE,CAACI,QAAQ,CAACL,IAAI,CAAC,IAAIG,OAAO,CAACG,QAAQ,CAACL,WAAW,EAAE,CAACI,QAAQ,CAACL,IAAI,CAAC,CACxG;;IAEH,OAAO,IAAI,CAACZ,SAAS;EACvB;EAEAmB,aAAaA,CAACC,EAAU;IACtB,IAAI,CAACrB,eAAe,CAACsB,IAAI,CAACD,EAAE,CAAC;EAC/B;EAEAE,aAAaA,CAACC,MAAc;IAC1B,QAAQA,MAAM;MACZ,KAAK,MAAM;QACT,OAAO,OAAO;MAChB,KAAK,WAAW;QACd,OAAO,UAAU;MACnB,KAAK,MAAM;QACT,OAAO,UAAU;MACnB;QACE,OAAO,UAAU;;EAEvB;CAED;AAxDUC,UAAA,EAARjC,KAAK,EAAE,C,iDAAqB;AACpBiC,UAAA,EAARjC,KAAK,EAAE,C,wDAAoB;AACnBiC,UAAA,EAARjC,KAAK,EAAE,C,qDAA8B;AAC5BiC,UAAA,EAAThC,MAAM,EAAE,C,wDAA6C;AAL3CC,gBAAgB,GAAA+B,UAAA,EAN5BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EAEWlC,gBAAgB,CA0D5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}