{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatService {\n  constructor(http) {\n    this.http = http;\n  }\n  getMessages(receiverId) {\n    return this.http.get(`http://localhost:8080/api/er/me/to/`, {\n      params: {\n        'receiverId': receiverId || ''\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ChatService_Factory(t) {\n      return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ChatService,\n      factory: ChatService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ChatService","constructor","http","getMessages","receiverId","get","params","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Elvis Rosa\\Desktop\\Proyectos Spring\\chatbot\\chat\\src\\app\\services\\chat.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(private http: HttpClient) { }\n\n  public getMessages(receiverId: string): Observable<any> {\n    return this.http.get(`http://localhost:8080/api/er/me/to/`, { params: { 'receiverId': receiverId || '' } });\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAEjCC,WAAWA,CAACC,UAAkB;IACnC,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,qCAAqC,EAAE;MAAEC,MAAM,EAAE;QAAE,YAAY,EAAEF,UAAU,IAAI;MAAE;IAAE,CAAE,CAAC;EAC7G;;;uBANWJ,WAAW,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXV,WAAW;MAAAW,OAAA,EAAXX,WAAW,CAAAY,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}