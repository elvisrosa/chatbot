{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {}\n  toggleDarkMode() {\n    const body = document.body;\n    body.classList.toggle('dark-mode');\n    const isDarkMode = body.classList.contains('dark-mode');\n    localStorage.setItem('isDarkMode', JSON.stringify(isDarkMode));\n  }\n  get isDarkMode() {\n    const isDarkMode = localStorage.getItem('dm');\n    return isDarkMode ? JSON.parse(isDarkMode) : false;\n  }\n  toggleTheme() {\n    const isDarkMode = localStorage.getItem('dm');\n    if (isDarkMode && isDarkMode === 'true') {\n      localStorage.setItem('dm', JSON.stringify(false));\n      document.body.classList.remove('dark-mode');\n    } else {\n      localStorage.setItem('dm', JSON.stringify(true));\n      document.body.classList.add('dark-mode');\n    }\n  }\n  static {\n    this.ɵfac = function ThemeService_Factory(t) {\n      return new (t || ThemeService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ThemeService,\n      factory: ThemeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ThemeService","constructor","toggleDarkMode","body","document","classList","toggle","isDarkMode","contains","localStorage","setItem","JSON","stringify","getItem","parse","toggleTheme","remove","add","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Elvis Rosa\\Desktop\\Proyectos Spring\\chat\\src\\app\\services\\theme.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  constructor() { }\n\n  toggleDarkMode() {\n    const body = document.body;\n    body.classList.toggle('dark-mode');\n    const isDarkMode = body.classList.contains('dark-mode');\n    localStorage.setItem('isDarkMode', JSON.stringify(isDarkMode));\n  }\n\n  get isDarkMode(): boolean {\n    const isDarkMode = localStorage.getItem('dm');\n    return isDarkMode ? JSON.parse(isDarkMode) : false;\n  }\n\n\n  toggleTheme() {\n    const isDarkMode = localStorage.getItem('dm');\n    if (isDarkMode && isDarkMode === 'true') {\n      localStorage.setItem('dm', JSON.stringify(false));\n      document.body.classList.remove('dark-mode');\n    } else {\n      localStorage.setItem('dm', JSON.stringify(true));\n      document.body.classList.add('dark-mode');\n    }\n\n  }\n\n\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,YAAY;EAEvBC,YAAA,GAAgB;EAEhBC,cAAcA,CAAA;IACZ,MAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAI;IAC1BA,IAAI,CAACE,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;IAClC,MAAMC,UAAU,GAAGJ,IAAI,CAACE,SAAS,CAACG,QAAQ,CAAC,WAAW,CAAC;IACvDC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAC,CAAC;EAChE;EAEA,IAAIA,UAAUA,CAAA;IACZ,MAAMA,UAAU,GAAGE,YAAY,CAACI,OAAO,CAAC,IAAI,CAAC;IAC7C,OAAON,UAAU,GAAGI,IAAI,CAACG,KAAK,CAACP,UAAU,CAAC,GAAG,KAAK;EACpD;EAGAQ,WAAWA,CAAA;IACT,MAAMR,UAAU,GAAGE,YAAY,CAACI,OAAO,CAAC,IAAI,CAAC;IAC7C,IAAIN,UAAU,IAAIA,UAAU,KAAK,MAAM,EAAE;MACvCE,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,KAAK,CAAC,CAAC;MACjDR,QAAQ,CAACD,IAAI,CAACE,SAAS,CAACW,MAAM,CAAC,WAAW,CAAC;KAC5C,MAAM;MACLP,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;MAChDR,QAAQ,CAACD,IAAI,CAACE,SAAS,CAACY,GAAG,CAAC,WAAW,CAAC;;EAG5C;;;uBA3BWjB,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}